package gov.healthit.chpl.entity;


import java.io.Serializable;
import java.util.Collections;
import java.util.Date;
import java.util.Map;
import java.util.WeakHashMap;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import org.hibernate.proxy.HibernateProxy;


/** 
 * Object mapping for hibernate-handled table: certified_product.
 * A product that has been Certified
 *
 * @author autogenerated / cwatson
 */

@Entity
@Table(name = "certified_product", catalog = "openchpl", schema = "openchpl")
public class CertifiedProduct {

	/** Serial Version UID. */
	private static final long serialVersionUID = -2928065796550377879L;

	/** Use a WeakHashMap so entries will be garbage collected once all entities 
		referring to a saved hash are garbage collected themselves. */
	private static final Map<Serializable, Long> SAVED_HASHES =
		Collections.synchronizedMap(new WeakHashMap<Serializable, Long>());
	
	/** hashCode temporary storage. */
	private volatile Long hashCode;
	
	
    @Id 
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "certifiedProductCertified_product_idGenerator")
	@Basic( optional = false )
	@Column( name = "certified_product_id", nullable = false  )
	@SequenceGenerator(name = "certifiedProductCertified_product_idGenerator", sequenceName = "openchpl.openchpl.certified_product_certified_product_id_seq", schema = "openchpl", catalog = "openchpl")
	private Long id;
    
    
	@Basic( optional = true )
	@Column( name = "atcb_certification_id", length = 250  )
	private String atcbCertificationId;
	
	@Basic( optional = false )
	@JoinColumn(name = "certification_body_id", nullable = false )
	private Long certificationBodyId;
	
	@Basic( optional = false )
	@JoinColumn(name = "certification_edition_id", nullable = false )
	private Long certificationEditionId;
	
	@Basic( optional = true )
	@Column( name = "chpl_product_number", length = 250  )
	private String chplProductNumber;
	
	@Basic( optional = false )
	@Column( name = "creation_date", nullable = false  )
	private Date creationDate;
	
	@Basic( optional = false )
	@Column( name = "deleted", nullable = false  )
	private Boolean deleted;
	
	@Basic( optional = false )
	@Column( name = "last_modified_date", nullable = false)
	private Date lastModifiedDate;
	
	@Basic( optional = false )
	@Column( name = "last_modified_user", nullable = false  )
	private Long lastModifiedUser;
	
	@Basic( optional = true )
	@Column(name = "practice_type_id", nullable = true )
	private Long practiceTypeId;
	
	@Basic( optional = true )
	@JoinColumn(name = "product_classification_type_id", nullable = true )
	private Long productClassificationTypeId;
	
	@Basic( optional = false )
	@JoinColumn(name = "product_version_id", nullable = false )
	private Long productVersionId;
	
	@Basic( optional = true )
	@Column( name = "quality_management_system_att", length = 2147483647  )
	private String qualityManagementSystemAtt;
	
	@Basic( optional = true )
	@Column( name = "report_file_location", length = 255  )
	private String reportFileLocation;
	
	@Basic( optional = true )
	@Column(name = "testing_lab_id", nullable = true )
	private Long testingLabId;
	
	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public CertifiedProduct() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public CertifiedProduct(Long id) {
		this.id = id;
	}
	
	
	/** Return the type of this class. Useful for when dealing with proxies.
	* @return Defining class.
	*/
	@Transient
	public Class<?> getClassType() {
		return CertifiedProduct.class;
	}

   public Long getHashCode() {
		return hashCode;
	}

	public void setHashCode(Long hashCode) {
		this.hashCode = hashCode;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getAtcbCertificationId() {
		return atcbCertificationId;
	}

	public void setAtcbCertificationId(String atcbCertificationId) {
		this.atcbCertificationId = atcbCertificationId;
	}

	public Long getCertificationBodyId() {
		return certificationBodyId;
	}

	public void setCertificationBodyId(Long certificationBodyId) {
		this.certificationBodyId = certificationBodyId;
	}

	public Long getCertificationEditionId() {
		return certificationEditionId;
	}

	public void setCertificationEditionId(Long certificationEditionId) {
		this.certificationEditionId = certificationEditionId;
	}

	public String getChplProductNumber() {
		return chplProductNumber;
	}

	public void setChplProductNumber(String chplProductNumber) {
		this.chplProductNumber = chplProductNumber;
	}

	public Date getCreationDate() {
		return creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	public Boolean isDeleted() {
		return deleted;
	}

	public void setDeleted(Boolean deleted) {
		this.deleted = deleted;
	}

	public Date getLastModifiedDate() {
		return lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	public Long getLastModifiedUser() {
		return lastModifiedUser;
	}

	public void setLastModifiedUser(Long lastModifiedUser) {
		this.lastModifiedUser = lastModifiedUser;
	}

	public Long getPracticeTypeId() {
		return practiceTypeId;
	}

	public void setPracticeTypeId(Long practiceTypeId) {
		this.practiceTypeId = practiceTypeId;
	}

	public Long getProductClassificationTypeId() {
		return productClassificationTypeId;
	}

	public void setProductClassificationTypeId(Long productClassificationTypeId) {
		this.productClassificationTypeId = productClassificationTypeId;
	}

	public Long getProductVersionId() {
		return productVersionId;
	}

	public void setProductVersionId(Long productVersionId) {
		this.productVersionId = productVersionId;
	}

	public String getQualityManagementSystemAtt() {
		return qualityManagementSystemAtt;
	}

	public void setQualityManagementSystemAtt(String qualityManagementSystemAtt) {
		this.qualityManagementSystemAtt = qualityManagementSystemAtt;
	}

	public String getReportFileLocation() {
		return reportFileLocation;
	}

	public void setReportFileLocation(String reportFileLocation) {
		this.reportFileLocation = reportFileLocation;
	}

	public Long getTestingLabId() {
		return testingLabId;
	}

	public void setTestingLabId(Long testingLabId) {
		this.testingLabId = testingLabId;
	}


	/** Equals implementation. 
	 * @see java.lang.Object#equals(java.lang.Object)
	 * @param aThat Object to compare with
	 * @return true/false
	 */
	@Override
	public boolean equals(final Object aThat) {
		Object proxyThat = aThat;
		
		if ( this == aThat ) {
			 return true;
		}

		
		if (aThat instanceof HibernateProxy) {
 			// narrow down the proxy to the class we are dealing with.
 			try {
				proxyThat = ((HibernateProxy) aThat).getHibernateLazyInitializer().getImplementation(); 
			} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		   	}
		}
		if (aThat == null)  {
			 return false;
		}
		
		final CertifiedProduct that; 
		try {
			that = (CertifiedProduct) proxyThat;
			if ( !(that.getClassType().equals(this.getClassType()))){
				return false;
			}
		} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		} catch (ClassCastException e) {
				return false;
		}
		
		
		boolean result = true;
		result = result && (((this.getId() == null) && ( that.getId() == null)) || (this.getId() != null  && this.getId().equals(that.getId())));
		result = result && (((getAtcbCertificationId() == null) && (that.getAtcbCertificationId() == null)) || (getAtcbCertificationId() != null && getAtcbCertificationId().equals(that.getAtcbCertificationId())));
		result = result && (((getCertificationBodyId() == null) && (that.getCertificationBodyId() == null)) || (getCertificationBodyId() != null && getCertificationBodyId().equals(that.getCertificationBodyId())));	
		result = result && (((getCertificationEditionId() == null) && (that.getCertificationEditionId() == null)) || (getCertificationEditionId() != null && getCertificationEditionId().equals(that.getCertificationEditionId())));	
		result = result && (((getChplProductNumber() == null) && (that.getChplProductNumber() == null)) || (getChplProductNumber() != null && getChplProductNumber().equals(that.getChplProductNumber())));
		result = result && (((getCreationDate() == null) && (that.getCreationDate() == null)) || (getCreationDate() != null && getCreationDate().equals(that.getCreationDate())));
		result = result && (((isDeleted() == null) && (that.isDeleted() == null)) || (isDeleted() != null && isDeleted().equals(that.isDeleted())));
		result = result && (((getLastModifiedDate() == null) && (that.getLastModifiedDate() == null)) || (getLastModifiedDate() != null && getLastModifiedDate().equals(that.getLastModifiedDate())));
		result = result && (((getLastModifiedUser() == null) && (that.getLastModifiedUser() == null)) || (getLastModifiedUser() != null && getLastModifiedUser().equals(that.getLastModifiedUser())));
		result = result && (((getPracticeTypeId() == null) && (that.getPracticeTypeId() == null)) || (getPracticeTypeId() != null && getPracticeTypeId().equals(that.getPracticeTypeId())));	
		result = result && (((getProductClassificationTypeId() == null) && (that.getProductClassificationTypeId() == null)) || (getProductClassificationTypeId() != null && getProductClassificationTypeId().equals(that.getProductClassificationTypeId())));	
		result = result && (((getProductVersionId() == null) && (that.getProductVersionId() == null)) || (getProductVersionId() != null && getProductVersionId().equals(that.getProductVersionId())));	
		result = result && (((getQualityManagementSystemAtt() == null) && (that.getQualityManagementSystemAtt() == null)) || (getQualityManagementSystemAtt() != null && getQualityManagementSystemAtt().equals(that.getQualityManagementSystemAtt())));
		result = result && (((getReportFileLocation() == null) && (that.getReportFileLocation() == null)) || (getReportFileLocation() != null && getReportFileLocation().equals(that.getReportFileLocation())));
		result = result && (((getTestingLabId() == null) && (that.getTestingLabId() == null)) || (getTestingLabId() != null && getTestingLabId().equals(that.getTestingLabId())));	
		return result;
	}
	
	/** Calculate the hashcode.
	 * @see java.lang.Object#hashCode()
	 * @return a calculated number
	 */
	@Override
	public int hashCode() {
		if ( this.hashCode == null ) {
			synchronized ( this ) {
				if ( this.hashCode == null ) {
					Long newHashCode = null;

					if ( getId() != null ) {
					newHashCode = SAVED_HASHES.get( getId() );
					}
					
					if ( newHashCode == null ) {
						if ( getId() != null && getId() != 0L) {
							newHashCode = getId();
						} else {
							newHashCode = (long) super.hashCode();

						}
					}
					
					this.hashCode = newHashCode;
				}
			}
		}
		return (int) (this.hashCode & 0xffffff);
	}


}
