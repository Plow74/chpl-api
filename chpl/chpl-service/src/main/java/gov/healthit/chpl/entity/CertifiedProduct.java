package gov.healthit.chpl.entity;

import gov.healthit.chpl.entity.AdditionalSoftware;
import gov.healthit.chpl.entity.CertificationEvent;
import gov.healthit.chpl.entity.CertificationResult;
import gov.healthit.chpl.entity.CertifiedProductCqmEditionMap;
import gov.healthit.chpl.entity.NewerStandardsMet;
import gov.healthit.chpl.entity.TestDataAlteration;
import gov.healthit.chpl.entity.TestResultSummaryVersion;
import gov.healthit.chpl.entity.UtilizedTestTool;
import java.io.Serializable;
import java.util.Collections;
import java.util.Date;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.WeakHashMap;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import org.hibernate.proxy.HibernateProxy;


/** 
 * Object mapping for hibernate-handled table: certified_product.
 * A product that has been Certified
 *
 * @author autogenerated
 */

@Entity
@Table(name = "certified_product", catalog = "openchpl", schema = "openchpl")
public class CertifiedProduct implements Cloneable, Serializable {

	/** Serial Version UID. */
	private static final long serialVersionUID = -2928065796550377879L;

	/** Use a WeakHashMap so entries will be garbage collected once all entities 
		referring to a saved hash are garbage collected themselves. */
	private static final Map<Serializable, Long> SAVED_HASHES =
		Collections.synchronizedMap(new WeakHashMap<Serializable, Long>());
	
	/** hashCode temporary storage. */
	private volatile Long hashCode;
	

	/** Field mapping. */
	private Set<AdditionalSoftware> additionalSoftwares = new HashSet<AdditionalSoftware>();

	/** Field mapping. */
	private String atcbCertificationId;
	
	/** Field mapping. */
	private Set<CertificationEvent> certificationEvents = new HashSet<CertificationEvent>();

	/** Field mapping. */
	private Set<CertificationResult> certificationResults = new HashSet<CertificationResult>();

	/** Field mapping. */
	private CertificationBody certificationBody;
	/** Field mapping. */
	private CertificationEdition certificationEdition;
	/** Field mapping. */
	private Set<CertifiedProductCqmEditionMap> certifiedProductCqmEditionMaps = new HashSet<CertifiedProductCqmEditionMap>();

	/** Field mapping. */
	private String chplProductNumber;
	/** Field mapping. */
	private Date creationDate;
	/** Field mapping. */
	private Boolean deleted;
	/** Field mapping. */
	private Long id;
	/** Field mapping. */
	private Date lastModifiedDate;
	/** Field mapping. */
	private Long lastModifiedUser;
	/** Field mapping. */
	private Set<NewerStandardsMet> newerStandardsMets = new HashSet<NewerStandardsMet>();

	/** Field mapping. */
	private PracticeType practiceType;
	/** Field mapping. */
	private ProductClassificationType productClassificationType;
	/** Field mapping. */
	private ProductVersion productVersion;
	/** Field mapping. */
	private String qualityManagementSystemAtt;
	/** Field mapping. */
	private String reportFileLocation;
	/** Field mapping. */
	private Set<TestDataAlteration> testDataAlterations = new HashSet<TestDataAlteration>();

	/** Field mapping. */
	private TestingLab testingLab;
	/** Field mapping. */
	private Set<TestResultSummaryVersion> testResultSummaryVersions = new HashSet<TestResultSummaryVersion>();

	/** Field mapping. */
	private Set<UtilizedTestTool> utilizedTestTools = new HashSet<UtilizedTestTool>();

	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public CertifiedProduct() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public CertifiedProduct(Long id) {
		this.id = id;
	}
	
	/** Constructor taking a given ID.
	 * @param certificationBody CertificationBody object;
	 * @param certificationEdition CertificationEdition object;
	 * @param creationDate Date object;
	 * @param deleted Boolean object;
	 * @param id Long object;
	 * @param lastModifiedDate Date object;
	 * @param lastModifiedUser Long object;
	 * @param productVersion ProductVersion object;
	 */
	public CertifiedProduct(CertificationBody certificationBody, CertificationEdition certificationEdition, Date creationDate, 					
			Boolean deleted, Long id, Date lastModifiedDate, 					
			Long lastModifiedUser, ProductVersion productVersion) {

		this.certificationBody = certificationBody;
		this.certificationEdition = certificationEdition;
		this.creationDate = creationDate;
		this.deleted = deleted;
		this.id = id;
		this.lastModifiedDate = lastModifiedDate;
		this.lastModifiedUser = lastModifiedUser;
		this.productVersion = productVersion;
	}
	
 


 
	/** Return the type of this class. Useful for when dealing with proxies.
	* @return Defining class.
	*/
	@Transient
	public Class<?> getClassType() {
		return CertifiedProduct.class;
	}
 

	 /**
	 * Return the value associated with the column: additionalSoftware.
	 * @return A Set&lt;AdditionalSoftware&gt; object (this.additionalSoftware)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "certifiedProduct"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "certified_product_id", nullable = false  )
	public Set<AdditionalSoftware> getAdditionalSoftwares() {
		return this.additionalSoftwares;
		
	}
	
	/**
	 * Adds a bi-directional link of type AdditionalSoftware to the additionalSoftwares set.
	 * @param additionalSoftware item to add
	 */
	public void addAdditionalSoftware(AdditionalSoftware additionalSoftware) {
		additionalSoftware.setCertifiedProduct(this);
		this.additionalSoftwares.add(additionalSoftware);
	}

  
	 /**  
	 * Set the value related to the column: additionalSoftware.
	 * @param additionalSoftware the additionalSoftware value you wish to set
	 */
	public void setAdditionalSoftwares(final Set<AdditionalSoftware> additionalSoftware) {
		this.additionalSoftwares = additionalSoftware;
	}

	 /**
	 * Return the value associated with the column: atcbCertificationId.
	 * @return A String object (this.atcbCertificationId)
	 */
	@Basic( optional = true )
	@Column( name = "atcb_certification_id", length = 250  )
	public String getAtcbCertificationId() {
		return this.atcbCertificationId;
		
	}
	

  
	 /**  
	 * Set the value related to the column: atcbCertificationId.
	 * @param atcbCertificationId the atcbCertificationId value you wish to set
	 */
	public void setAtcbCertificationId(final String atcbCertificationId) {
		this.atcbCertificationId = atcbCertificationId;
	}

	 /**
	 * Return the value associated with the column: certificationEvent.
	 * @return A Set&lt;CertificationEvent&gt; object (this.certificationEvent)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "certifiedProduct"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "certified_product_id", nullable = false  )
	public Set<CertificationEvent> getCertificationEvents() {
		return this.certificationEvents;
		
	}
	
	/**
	 * Adds a bi-directional link of type CertificationEvent to the certificationEvents set.
	 * @param certificationEvent item to add
	 */
	public void addCertificationEvent(CertificationEvent certificationEvent) {
		certificationEvent.setCertifiedProduct(this);
		this.certificationEvents.add(certificationEvent);
	}

  
	 /**  
	 * Set the value related to the column: certificationEvent.
	 * @param certificationEvent the certificationEvent value you wish to set
	 */
	public void setCertificationEvents(final Set<CertificationEvent> certificationEvent) {
		this.certificationEvents = certificationEvent;
	}

	 /**
	 * Return the value associated with the column: certificationResult.
	 * @return A Set&lt;CertificationResult&gt; object (this.certificationResult)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "certifiedProduct"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "certified_product_id", nullable = false  )
	public Set<CertificationResult> getCertificationResults() {
		return this.certificationResults;
		
	}
	
	/**
	 * Adds a bi-directional link of type CertificationResult to the certificationResults set.
	 * @param certificationResult item to add
	 */
	public void addCertificationResult(CertificationResult certificationResult) {
		certificationResult.setCertifiedProduct(this);
		this.certificationResults.add(certificationResult);
	}

  
	 /**  
	 * Set the value related to the column: certificationResult.
	 * @param certificationResult the certificationResult value you wish to set
	 */
	public void setCertificationResults(final Set<CertificationResult> certificationResult) {
		this.certificationResults = certificationResult;
	}

	 /**
	 * Return the value associated with the column: certificationBody.
	 * @return A CertificationBody object (this.certificationBody)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "certification_body_id", nullable = false )
	public CertificationBody getCertificationBody() {
		return this.certificationBody;
		
	}
	

  
	 /**  
	 * Set the value related to the column: certificationBody.
	 * @param certificationBody the certificationBody value you wish to set
	 */
	public void setCertificationBody(final CertificationBody certificationBody) {
		this.certificationBody = certificationBody;
	}

	 /**
	 * Return the value associated with the column: certificationEdition.
	 * @return A CertificationEdition object (this.certificationEdition)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "certification_edition_id", nullable = false )
	public CertificationEdition getCertificationEdition() {
		return this.certificationEdition;
		
	}
	

  
	 /**  
	 * Set the value related to the column: certificationEdition.
	 * @param certificationEdition the certificationEdition value you wish to set
	 */
	public void setCertificationEdition(final CertificationEdition certificationEdition) {
		this.certificationEdition = certificationEdition;
	}

	 /**
	 * Return the value associated with the column: certifiedProductCqmEditionMap.
	 * @return A Set&lt;CertifiedProductCqmEditionMap&gt; object (this.certifiedProductCqmEditionMap)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "certifiedProduct"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "certified_product_id", nullable = false  )
	public Set<CertifiedProductCqmEditionMap> getCertifiedProductCqmEditionMaps() {
		return this.certifiedProductCqmEditionMaps;
		
	}
	
	/**
	 * Adds a bi-directional link of type CertifiedProductCqmEditionMap to the certifiedProductCqmEditionMaps set.
	 * @param certifiedProductCqmEditionMap item to add
	 */
	public void addCertifiedProductCqmEditionMap(CertifiedProductCqmEditionMap certifiedProductCqmEditionMap) {
		certifiedProductCqmEditionMap.setCertifiedProduct(this);
		this.certifiedProductCqmEditionMaps.add(certifiedProductCqmEditionMap);
	}

  
	 /**  
	 * Set the value related to the column: certifiedProductCqmEditionMap.
	 * @param certifiedProductCqmEditionMap the certifiedProductCqmEditionMap value you wish to set
	 */
	public void setCertifiedProductCqmEditionMaps(final Set<CertifiedProductCqmEditionMap> certifiedProductCqmEditionMap) {
		this.certifiedProductCqmEditionMaps = certifiedProductCqmEditionMap;
	}

	 /**
	 * Return the value associated with the column: chplProductNumber.
	 * @return A String object (this.chplProductNumber)
	 */
	@Basic( optional = true )
	@Column( name = "chpl_product_number", length = 250  )
	public String getChplProductNumber() {
		return this.chplProductNumber;
		
	}
	

  
	 /**  
	 * Set the value related to the column: chplProductNumber.
	 * @param chplProductNumber the chplProductNumber value you wish to set
	 */
	public void setChplProductNumber(final String chplProductNumber) {
		this.chplProductNumber = chplProductNumber;
	}

	 /**
	 * Return the value associated with the column: creationDate.
	 * @return A Date object (this.creationDate)
	 */
	@Basic( optional = false )
	@Column( name = "creation_date", nullable = false  )
	public Date getCreationDate() {
		return this.creationDate;
		
	}
	

  
	 /**  
	 * Set the value related to the column: creationDate.
	 * @param creationDate the creationDate value you wish to set
	 */
	public void setCreationDate(final Date creationDate) {
		this.creationDate = creationDate;
	}

	 /**
	 * Return the value associated with the column: deleted.
	 * @return A Boolean object (this.deleted)
	 */
	@Basic( optional = false )
	@Column( nullable = false  )
	public Boolean isDeleted() {
		return this.deleted;
		
	}
	

  
	 /**  
	 * Set the value related to the column: deleted.
	 * @param deleted the deleted value you wish to set
	 */
	public void setDeleted(final Boolean deleted) {
		this.deleted = deleted;
	}

	 /**
	 * Return the value associated with the column: id.
	 * @return A Long object (this.id)
	 */
    @Id 
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "certifiedProductCertified_product_idGenerator")
	@Basic( optional = false )
	@Column( name = "certified_product_id", nullable = false  )
	@SequenceGenerator(name = "certifiedProductCertified_product_idGenerator", sequenceName = "openchpl.openchpl.certified_product_certified_product_id_seq", schema = "openchpl", catalog = "openchpl")
	public Long getId() {
		return this.id;
		
	}
	

  
	 /**  
	 * Set the value related to the column: id.
	 * @param id the id value you wish to set
	 */
	public void setId(final Long id) {
		// If we've just been persisted and hashCode has been
		// returned then make sure other entities with this
		// ID return the already returned hash code
		if ( (this.id == null || this.id == 0L) &&
				(id != null) &&
				(this.hashCode != null) ) {
		SAVED_HASHES.put( id, this.hashCode );
		}
		this.id = id;
	}

	 /**
	 * Return the value associated with the column: lastModifiedDate.
	 * @return A Date object (this.lastModifiedDate)
	 */
	@Basic( optional = false )
	@Column( name = "last_modified_date", nullable = false  )
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
		
	}
	

  
	 /**  
	 * Set the value related to the column: lastModifiedDate.
	 * @param lastModifiedDate the lastModifiedDate value you wish to set
	 */
	public void setLastModifiedDate(final Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	 /**
	 * Return the value associated with the column: lastModifiedUser.
	 * @return A Long object (this.lastModifiedUser)
	 */
	@Basic( optional = false )
	@Column( name = "last_modified_user", nullable = false  )
	public Long getLastModifiedUser() {
		return this.lastModifiedUser;
		
	}
	

  
	 /**  
	 * Set the value related to the column: lastModifiedUser.
	 * @param lastModifiedUser the lastModifiedUser value you wish to set
	 */
	public void setLastModifiedUser(final Long lastModifiedUser) {
		this.lastModifiedUser = lastModifiedUser;
	}

	 /**
	 * Return the value associated with the column: newerStandardsMet.
	 * @return A Set&lt;NewerStandardsMet&gt; object (this.newerStandardsMet)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "certifiedProduct"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "certified_product_id", nullable = false  )
	public Set<NewerStandardsMet> getNewerStandardsMets() {
		return this.newerStandardsMets;
		
	}
	
	/**
	 * Adds a bi-directional link of type NewerStandardsMet to the newerStandardsMets set.
	 * @param newerStandardsMet item to add
	 */
	public void addNewerStandardsMet(NewerStandardsMet newerStandardsMet) {
		newerStandardsMet.setCertifiedProduct(this);
		this.newerStandardsMets.add(newerStandardsMet);
	}

  
	 /**  
	 * Set the value related to the column: newerStandardsMet.
	 * @param newerStandardsMet the newerStandardsMet value you wish to set
	 */
	public void setNewerStandardsMets(final Set<NewerStandardsMet> newerStandardsMet) {
		this.newerStandardsMets = newerStandardsMet;
	}

	 /**
	 * Return the value associated with the column: practiceType.
	 * @return A PracticeType object (this.practiceType)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = true )
	@JoinColumn(name = "practice_type_id", nullable = true )
	public PracticeType getPracticeType() {
		return this.practiceType;
		
	}
	

  
	 /**  
	 * Set the value related to the column: practiceType.
	 * @param practiceType the practiceType value you wish to set
	 */
	public void setPracticeType(final PracticeType practiceType) {
		this.practiceType = practiceType;
	}

	 /**
	 * Return the value associated with the column: productClassificationType.
	 * @return A ProductClassificationType object (this.productClassificationType)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = true )
	@JoinColumn(name = "product_classification_type_id", nullable = true )
	public ProductClassificationType getProductClassificationType() {
		return this.productClassificationType;
		
	}
	

  
	 /**  
	 * Set the value related to the column: productClassificationType.
	 * @param productClassificationType the productClassificationType value you wish to set
	 */
	public void setProductClassificationType(final ProductClassificationType productClassificationType) {
		this.productClassificationType = productClassificationType;
	}

	 /**
	 * Return the value associated with the column: productVersion.
	 * @return A ProductVersion object (this.productVersion)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "product_version_id", nullable = false )
	public ProductVersion getProductVersion() {
		return this.productVersion;
		
	}
	

  
	 /**  
	 * Set the value related to the column: productVersion.
	 * @param productVersion the productVersion value you wish to set
	 */
	public void setProductVersion(final ProductVersion productVersion) {
		this.productVersion = productVersion;
	}

	 /**
	 * Return the value associated with the column: qualityManagementSystemAtt.
	 * @return A String object (this.qualityManagementSystemAtt)
	 */
	@Basic( optional = true )
	@Column( name = "quality_management_system_att", length = 2147483647  )
	public String getQualityManagementSystemAtt() {
		return this.qualityManagementSystemAtt;
		
	}
	

  
	 /**  
	 * Set the value related to the column: qualityManagementSystemAtt.
	 * @param qualityManagementSystemAtt the qualityManagementSystemAtt value you wish to set
	 */
	public void setQualityManagementSystemAtt(final String qualityManagementSystemAtt) {
		this.qualityManagementSystemAtt = qualityManagementSystemAtt;
	}

	 /**
	 * Return the value associated with the column: reportFileLocation.
	 * @return A String object (this.reportFileLocation)
	 */
	@Basic( optional = true )
	@Column( name = "report_file_location", length = 255  )
	public String getReportFileLocation() {
		return this.reportFileLocation;
		
	}
	

  
	 /**  
	 * Set the value related to the column: reportFileLocation.
	 * @param reportFileLocation the reportFileLocation value you wish to set
	 */
	public void setReportFileLocation(final String reportFileLocation) {
		this.reportFileLocation = reportFileLocation;
	}

	 /**
	 * Return the value associated with the column: testDataAlteration.
	 * @return A Set&lt;TestDataAlteration&gt; object (this.testDataAlteration)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "certifiedProduct"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "certified_product_id", nullable = false  )
	public Set<TestDataAlteration> getTestDataAlterations() {
		return this.testDataAlterations;
		
	}
	
	/**
	 * Adds a bi-directional link of type TestDataAlteration to the testDataAlterations set.
	 * @param testDataAlteration item to add
	 */
	public void addTestDataAlteration(TestDataAlteration testDataAlteration) {
		testDataAlteration.setCertifiedProduct(this);
		this.testDataAlterations.add(testDataAlteration);
	}

  
	 /**  
	 * Set the value related to the column: testDataAlteration.
	 * @param testDataAlteration the testDataAlteration value you wish to set
	 */
	public void setTestDataAlterations(final Set<TestDataAlteration> testDataAlteration) {
		this.testDataAlterations = testDataAlteration;
	}

	 /**
	 * Return the value associated with the column: testingLab.
	 * @return A TestingLab object (this.testingLab)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = true )
	@JoinColumn(name = "testing_lab_id", nullable = true )
	public TestingLab getTestingLab() {
		return this.testingLab;
		
	}
	

  
	 /**  
	 * Set the value related to the column: testingLab.
	 * @param testingLab the testingLab value you wish to set
	 */
	public void setTestingLab(final TestingLab testingLab) {
		this.testingLab = testingLab;
	}

	 /**
	 * Return the value associated with the column: testResultSummaryVersion.
	 * @return A Set&lt;TestResultSummaryVersion&gt; object (this.testResultSummaryVersion)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "certifiedProduct"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "certified_product_id", nullable = false  )
	public Set<TestResultSummaryVersion> getTestResultSummaryVersions() {
		return this.testResultSummaryVersions;
		
	}
	
	/**
	 * Adds a bi-directional link of type TestResultSummaryVersion to the testResultSummaryVersions set.
	 * @param testResultSummaryVersion item to add
	 */
	public void addTestResultSummaryVersion(TestResultSummaryVersion testResultSummaryVersion) {
		testResultSummaryVersion.setCertifiedProduct(this);
		this.testResultSummaryVersions.add(testResultSummaryVersion);
	}

  
	 /**  
	 * Set the value related to the column: testResultSummaryVersion.
	 * @param testResultSummaryVersion the testResultSummaryVersion value you wish to set
	 */
	public void setTestResultSummaryVersions(final Set<TestResultSummaryVersion> testResultSummaryVersion) {
		this.testResultSummaryVersions = testResultSummaryVersion;
	}

	 /**
	 * Return the value associated with the column: utilizedTestTool.
	 * @return A Set&lt;UtilizedTestTool&gt; object (this.utilizedTestTool)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "certifiedProduct"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "certified_product_id", nullable = false  )
	public Set<UtilizedTestTool> getUtilizedTestTools() {
		return this.utilizedTestTools;
		
	}
	
	/**
	 * Adds a bi-directional link of type UtilizedTestTool to the utilizedTestTools set.
	 * @param utilizedTestTool item to add
	 */
	public void addUtilizedTestTool(UtilizedTestTool utilizedTestTool) {
		utilizedTestTool.setCertifiedProduct(this);
		this.utilizedTestTools.add(utilizedTestTool);
	}

  
	 /**  
	 * Set the value related to the column: utilizedTestTool.
	 * @param utilizedTestTool the utilizedTestTool value you wish to set
	 */
	public void setUtilizedTestTools(final Set<UtilizedTestTool> utilizedTestTool) {
		this.utilizedTestTools = utilizedTestTool;
	}


   /**
    * Deep copy.
	* @return cloned object
	* @throws CloneNotSupportedException on error
    */
    @Override
    public CertifiedProduct clone() throws CloneNotSupportedException {
		
        final CertifiedProduct copy = (CertifiedProduct)super.clone();

		if (this.getAdditionalSoftwares() != null) {
			copy.getAdditionalSoftwares().addAll(this.getAdditionalSoftwares());
		}
		copy.setAtcbCertificationId(this.getAtcbCertificationId());
		if (this.getCertificationEvents() != null) {
			copy.getCertificationEvents().addAll(this.getCertificationEvents());
		}
		if (this.getCertificationResults() != null) {
			copy.getCertificationResults().addAll(this.getCertificationResults());
		}
		copy.setCertificationBody(this.getCertificationBody());
		copy.setCertificationEdition(this.getCertificationEdition());
		if (this.getCertifiedProductCqmEditionMaps() != null) {
			copy.getCertifiedProductCqmEditionMaps().addAll(this.getCertifiedProductCqmEditionMaps());
		}
		copy.setChplProductNumber(this.getChplProductNumber());
		copy.setCreationDate(this.getCreationDate());
		copy.setDeleted(this.isDeleted());
		copy.setId(this.getId());
		copy.setLastModifiedDate(this.getLastModifiedDate());
		copy.setLastModifiedUser(this.getLastModifiedUser());
		if (this.getNewerStandardsMets() != null) {
			copy.getNewerStandardsMets().addAll(this.getNewerStandardsMets());
		}
		copy.setPracticeType(this.getPracticeType());
		copy.setProductClassificationType(this.getProductClassificationType());
		copy.setProductVersion(this.getProductVersion());
		copy.setQualityManagementSystemAtt(this.getQualityManagementSystemAtt());
		copy.setReportFileLocation(this.getReportFileLocation());
		if (this.getTestDataAlterations() != null) {
			copy.getTestDataAlterations().addAll(this.getTestDataAlterations());
		}
		copy.setTestingLab(this.getTestingLab());
		if (this.getTestResultSummaryVersions() != null) {
			copy.getTestResultSummaryVersions().addAll(this.getTestResultSummaryVersions());
		}
		if (this.getUtilizedTestTools() != null) {
			copy.getUtilizedTestTools().addAll(this.getUtilizedTestTools());
		}
		return copy;
	}
	


	/** Provides toString implementation.
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		
		sb.append("atcbCertificationId: " + this.getAtcbCertificationId() + ", ");
		sb.append("chplProductNumber: " + this.getChplProductNumber() + ", ");
		sb.append("creationDate: " + this.getCreationDate() + ", ");
		sb.append("deleted: " + this.isDeleted() + ", ");
		sb.append("id: " + this.getId() + ", ");
		sb.append("lastModifiedDate: " + this.getLastModifiedDate() + ", ");
		sb.append("lastModifiedUser: " + this.getLastModifiedUser() + ", ");
		sb.append("qualityManagementSystemAtt: " + this.getQualityManagementSystemAtt() + ", ");
		sb.append("reportFileLocation: " + this.getReportFileLocation() + ", ");
		return sb.toString();		
	}


	/** Equals implementation. 
	 * @see java.lang.Object#equals(java.lang.Object)
	 * @param aThat Object to compare with
	 * @return true/false
	 */
	@Override
	public boolean equals(final Object aThat) {
		Object proxyThat = aThat;
		
		if ( this == aThat ) {
			 return true;
		}

		
		if (aThat instanceof HibernateProxy) {
 			// narrow down the proxy to the class we are dealing with.
 			try {
				proxyThat = ((HibernateProxy) aThat).getHibernateLazyInitializer().getImplementation(); 
			} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		   	}
		}
		if (aThat == null)  {
			 return false;
		}
		
		final CertifiedProduct that; 
		try {
			that = (CertifiedProduct) proxyThat;
			if ( !(that.getClassType().equals(this.getClassType()))){
				return false;
			}
		} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		} catch (ClassCastException e) {
				return false;
		}
		
		
		boolean result = true;
		result = result && (((this.getId() == null) && ( that.getId() == null)) || (this.getId() != null  && this.getId().equals(that.getId())));
		result = result && (((getAtcbCertificationId() == null) && (that.getAtcbCertificationId() == null)) || (getAtcbCertificationId() != null && getAtcbCertificationId().equals(that.getAtcbCertificationId())));
		result = result && (((getCertificationBody() == null) && (that.getCertificationBody() == null)) || (getCertificationBody() != null && getCertificationBody().getId().equals(that.getCertificationBody().getId())));	
		result = result && (((getCertificationEdition() == null) && (that.getCertificationEdition() == null)) || (getCertificationEdition() != null && getCertificationEdition().getId().equals(that.getCertificationEdition().getId())));	
		result = result && (((getChplProductNumber() == null) && (that.getChplProductNumber() == null)) || (getChplProductNumber() != null && getChplProductNumber().equals(that.getChplProductNumber())));
		result = result && (((getCreationDate() == null) && (that.getCreationDate() == null)) || (getCreationDate() != null && getCreationDate().equals(that.getCreationDate())));
		result = result && (((isDeleted() == null) && (that.isDeleted() == null)) || (isDeleted() != null && isDeleted().equals(that.isDeleted())));
		result = result && (((getLastModifiedDate() == null) && (that.getLastModifiedDate() == null)) || (getLastModifiedDate() != null && getLastModifiedDate().equals(that.getLastModifiedDate())));
		result = result && (((getLastModifiedUser() == null) && (that.getLastModifiedUser() == null)) || (getLastModifiedUser() != null && getLastModifiedUser().equals(that.getLastModifiedUser())));
		result = result && (((getPracticeType() == null) && (that.getPracticeType() == null)) || (getPracticeType() != null && getPracticeType().getId().equals(that.getPracticeType().getId())));	
		result = result && (((getProductClassificationType() == null) && (that.getProductClassificationType() == null)) || (getProductClassificationType() != null && getProductClassificationType().getId().equals(that.getProductClassificationType().getId())));	
		result = result && (((getProductVersion() == null) && (that.getProductVersion() == null)) || (getProductVersion() != null && getProductVersion().getId().equals(that.getProductVersion().getId())));	
		result = result && (((getQualityManagementSystemAtt() == null) && (that.getQualityManagementSystemAtt() == null)) || (getQualityManagementSystemAtt() != null && getQualityManagementSystemAtt().equals(that.getQualityManagementSystemAtt())));
		result = result && (((getReportFileLocation() == null) && (that.getReportFileLocation() == null)) || (getReportFileLocation() != null && getReportFileLocation().equals(that.getReportFileLocation())));
		result = result && (((getTestingLab() == null) && (that.getTestingLab() == null)) || (getTestingLab() != null && getTestingLab().getId().equals(that.getTestingLab().getId())));	
		return result;
	}
	
	/** Calculate the hashcode.
	 * @see java.lang.Object#hashCode()
	 * @return a calculated number
	 */
	@Override
	public int hashCode() {
		if ( this.hashCode == null ) {
			synchronized ( this ) {
				if ( this.hashCode == null ) {
					Long newHashCode = null;

					if ( getId() != null ) {
					newHashCode = SAVED_HASHES.get( getId() );
					}
					
					if ( newHashCode == null ) {
						if ( getId() != null && getId() != 0L) {
							newHashCode = getId();
						} else {
							newHashCode = (long) super.hashCode();

						}
					}
					
					this.hashCode = newHashCode;
				}
			}
		}
		return (int) (this.hashCode & 0xffffff);
	}
	

	
}
