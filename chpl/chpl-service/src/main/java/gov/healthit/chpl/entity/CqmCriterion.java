package gov.healthit.chpl.entity;

import gov.healthit.chpl.entity.CqmResult;
import gov.healthit.chpl.entity.CqmVersion;
import java.io.Serializable;
import java.util.Collections;
import java.util.Date;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.WeakHashMap;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import org.hibernate.proxy.HibernateProxy;


/** 
 * Object mapping for hibernate-handled table: cqm_criterion.
 * 
 *
 * @author autogenerated
 */

@Entity
@Table(name = "cqm_criterion", catalog = "openchpl", schema = "openchpl")
public class CqmCriterion implements Cloneable, Serializable {

	/** Serial Version UID. */
	private static final long serialVersionUID = -2211767748745043169L;

	/** Use a WeakHashMap so entries will be garbage collected once all entities 
		referring to a saved hash are garbage collected themselves. */
	private static final Map<Serializable, Long> SAVED_HASHES =
		Collections.synchronizedMap(new WeakHashMap<Serializable, Long>());
	
	/** hashCode temporary storage. */
	private volatile Long hashCode;
	

	/** Field mapping. */
	private String cmsId;
	/** Field mapping. */
	private Set<CqmResult> cqmResults = new HashSet<CqmResult>();

	/** Field mapping. */
	private Set<CqmVersion> cqmVersions = new HashSet<CqmVersion>();

	/** Field mapping. */
	private CqmCriterionType cqmCriterionType;
	/** Field mapping. */
	private String cqmDomain;
	/** Field mapping. */
	private CqmEdition cqmEdition;
	/** Field mapping. */
	private String cqmVersion;
	/** Field mapping. */
	private Date creationDate;
	/** Field mapping. */
	private Boolean deleted;
	/** Field mapping. */
	private String description;
	/** Field mapping. */
	private Long id;
	/** Field mapping. */
	private Date lastModifiedDate;
	/** Field mapping. */
	private Long lastModifiedUser;
	/** Field mapping. */
	private String nqfNumber;
	/** Field mapping. */
	private String number;
	/** Field mapping. */
	private String title;
	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public CqmCriterion() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public CqmCriterion(Long id) {
		this.id = id;
	}
	
	/** Constructor taking a given ID.
	 * @param cqmCriterionType CqmCriterionType object;
	 * @param cqmEdition CqmEdition object;
	 * @param creationDate Date object;
	 * @param deleted Boolean object;
	 * @param id Long object;
	 * @param lastModifiedDate Date object;
	 * @param lastModifiedUser Long object;
	 */
	public CqmCriterion(CqmCriterionType cqmCriterionType, CqmEdition cqmEdition, Date creationDate, 					
			Boolean deleted, Long id, Date lastModifiedDate, 					
			Long lastModifiedUser) {

		this.cqmCriterionType = cqmCriterionType;
		this.cqmEdition = cqmEdition;
		this.creationDate = creationDate;
		this.deleted = deleted;
		this.id = id;
		this.lastModifiedDate = lastModifiedDate;
		this.lastModifiedUser = lastModifiedUser;
	}
	
 


 
	/** Return the type of this class. Useful for when dealing with proxies.
	* @return Defining class.
	*/
	@Transient
	public Class<?> getClassType() {
		return CqmCriterion.class;
	}
 

	 /**
	 * Return the value associated with the column: cmsId.
	 * @return A String object (this.cmsId)
	 */
	@Basic( optional = true )
	@Column( name = "cms_id", length = 15  )
	public String getCmsId() {
		return this.cmsId;
		
	}
	

  
	 /**  
	 * Set the value related to the column: cmsId.
	 * @param cmsId the cmsId value you wish to set
	 */
	public void setCmsId(final String cmsId) {
		this.cmsId = cmsId;
	}

	 /**
	 * Return the value associated with the column: cqmResult.
	 * @return A Set&lt;CqmResult&gt; object (this.cqmResult)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "cqmCriterion"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "cqm_criterion_id", nullable = false  )
	public Set<CqmResult> getCqmResults() {
		return this.cqmResults;
		
	}
	
	/**
	 * Adds a bi-directional link of type CqmResult to the cqmResults set.
	 * @param cqmResult item to add
	 */
	public void addCqmResult(CqmResult cqmResult) {
		cqmResult.setCqmCriterion(this);
		this.cqmResults.add(cqmResult);
	}

  
	 /**  
	 * Set the value related to the column: cqmResult.
	 * @param cqmResult the cqmResult value you wish to set
	 */
	public void setCqmResults(final Set<CqmResult> cqmResult) {
		this.cqmResults = cqmResult;
	}

	 /**
	 * Return the value associated with the column: cqmVersion.
	 * @return A Set&lt;CqmVersion&gt; object (this.cqmVersion)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "cqmCriterion"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "cqm_criterion_id", nullable = false  )
	public Set<CqmVersion> getCqmVersions() {
		return this.cqmVersions;
		
	}
	
	/**
	 * Adds a bi-directional link of type CqmVersion to the cqmVersions set.
	 * @param cqmVersion item to add
	 */
	public void addCqmVersion(CqmVersion cqmVersion) {
		cqmVersion.setCqmCriterion(this);
		this.cqmVersions.add(cqmVersion);
	}

  
	 /**  
	 * Set the value related to the column: cqmVersion.
	 * @param cqmVersion the cqmVersion value you wish to set
	 */
	public void setCqmVersions(final Set<CqmVersion> cqmVersion) {
		this.cqmVersions = cqmVersion;
	}

	 /**
	 * Return the value associated with the column: cqmCriterionType.
	 * @return A CqmCriterionType object (this.cqmCriterionType)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "cqm_criterion_type_id", nullable = false )
	public CqmCriterionType getCqmCriterionType() {
		return this.cqmCriterionType;
		
	}
	

  
	 /**  
	 * Set the value related to the column: cqmCriterionType.
	 * @param cqmCriterionType the cqmCriterionType value you wish to set
	 */
	public void setCqmCriterionType(final CqmCriterionType cqmCriterionType) {
		this.cqmCriterionType = cqmCriterionType;
	}

	 /**
	 * Return the value associated with the column: cqmDomain.
	 * @return A String object (this.cqmDomain)
	 */
	@Basic( optional = true )
	@Column( name = "cqm_domain", length = 250  )
	public String getCqmDomain() {
		return this.cqmDomain;
		
	}
	

  
	 /**  
	 * Set the value related to the column: cqmDomain.
	 * @param cqmDomain the cqmDomain value you wish to set
	 */
	public void setCqmDomain(final String cqmDomain) {
		this.cqmDomain = cqmDomain;
	}

	 /**
	 * Return the value associated with the column: cqmEdition.
	 * @return A CqmEdition object (this.cqmEdition)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "cqm_edition_id", nullable = false )
	public CqmEdition getCqmEdition() {
		return this.cqmEdition;
		
	}
	

  
	 /**  
	 * Set the value related to the column: cqmEdition.
	 * @param cqmEdition the cqmEdition value you wish to set
	 */
	public void setCqmEdition(final CqmEdition cqmEdition) {
		this.cqmEdition = cqmEdition;
	}

	 /**
	 * Return the value associated with the column: cqmVersion.
	 * @return A String object (this.cqmVersion)
	 */
	@Basic( optional = true )
	@Column( name = "cqm_version", length = 10  )
	public String getCqmVersion() {
		return this.cqmVersion;
		
	}
	

  
	 /**  
	 * Set the value related to the column: cqmVersion.
	 * @param cqmVersion the cqmVersion value you wish to set
	 */
	public void setCqmVersion(final String cqmVersion) {
		this.cqmVersion = cqmVersion;
	}

	 /**
	 * Return the value associated with the column: creationDate.
	 * @return A Date object (this.creationDate)
	 */
	@Basic( optional = false )
	@Column( name = "creation_date", nullable = false  )
	public Date getCreationDate() {
		return this.creationDate;
		
	}
	

  
	 /**  
	 * Set the value related to the column: creationDate.
	 * @param creationDate the creationDate value you wish to set
	 */
	public void setCreationDate(final Date creationDate) {
		this.creationDate = creationDate;
	}

	 /**
	 * Return the value associated with the column: deleted.
	 * @return A Boolean object (this.deleted)
	 */
	@Basic( optional = false )
	@Column( nullable = false  )
	public Boolean isDeleted() {
		return this.deleted;
		
	}
	

  
	 /**  
	 * Set the value related to the column: deleted.
	 * @param deleted the deleted value you wish to set
	 */
	public void setDeleted(final Boolean deleted) {
		this.deleted = deleted;
	}

	 /**
	 * Return the value associated with the column: description.
	 * @return A String object (this.description)
	 */
	@Basic( optional = true )
	@Column( length = 1000  )
	public String getDescription() {
		return this.description;
		
	}
	

  
	 /**  
	 * Set the value related to the column: description.
	 * @param description the description value you wish to set
	 */
	public void setDescription(final String description) {
		this.description = description;
	}

	 /**
	 * Return the value associated with the column: id.
	 * @return A Long object (this.id)
	 */
    @Id 
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "cqmCriterionCqm_criterion_idGenerator")
	@Basic( optional = false )
	@Column( name = "cqm_criterion_id", nullable = false  )
	@SequenceGenerator(name = "cqmCriterionCqm_criterion_idGenerator", sequenceName = "openchpl.openchpl.cqm_criterion_cqm_criterion_id_seq", schema = "openchpl", catalog = "openchpl")
	public Long getId() {
		return this.id;
		
	}
	

  
	 /**  
	 * Set the value related to the column: id.
	 * @param id the id value you wish to set
	 */
	public void setId(final Long id) {
		// If we've just been persisted and hashCode has been
		// returned then make sure other entities with this
		// ID return the already returned hash code
		if ( (this.id == null || this.id == 0L) &&
				(id != null) &&
				(this.hashCode != null) ) {
		SAVED_HASHES.put( id, this.hashCode );
		}
		this.id = id;
	}

	 /**
	 * Return the value associated with the column: lastModifiedDate.
	 * @return A Date object (this.lastModifiedDate)
	 */
	@Basic( optional = false )
	@Column( name = "last_modified_date", nullable = false  )
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
		
	}
	

  
	 /**  
	 * Set the value related to the column: lastModifiedDate.
	 * @param lastModifiedDate the lastModifiedDate value you wish to set
	 */
	public void setLastModifiedDate(final Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	 /**
	 * Return the value associated with the column: lastModifiedUser.
	 * @return A Long object (this.lastModifiedUser)
	 */
	@Basic( optional = false )
	@Column( name = "last_modified_user", nullable = false  )
	public Long getLastModifiedUser() {
		return this.lastModifiedUser;
		
	}
	

  
	 /**  
	 * Set the value related to the column: lastModifiedUser.
	 * @param lastModifiedUser the lastModifiedUser value you wish to set
	 */
	public void setLastModifiedUser(final Long lastModifiedUser) {
		this.lastModifiedUser = lastModifiedUser;
	}

	 /**
	 * Return the value associated with the column: nqfNumber.
	 * @return A String object (this.nqfNumber)
	 */
	@Basic( optional = true )
	@Column( name = "nqf_number", length = 50  )
	public String getNqfNumber() {
		return this.nqfNumber;
		
	}
	

  
	 /**  
	 * Set the value related to the column: nqfNumber.
	 * @param nqfNumber the nqfNumber value you wish to set
	 */
	public void setNqfNumber(final String nqfNumber) {
		this.nqfNumber = nqfNumber;
	}

	 /**
	 * Return the value associated with the column: number.
	 * @return A String object (this.number)
	 */
	@Basic( optional = true )
	@Column( length = 20  )
	public String getNumber() {
		return this.number;
		
	}
	

  
	 /**  
	 * Set the value related to the column: number.
	 * @param number the number value you wish to set
	 */
	public void setNumber(final String number) {
		this.number = number;
	}

	 /**
	 * Return the value associated with the column: title.
	 * @return A String object (this.title)
	 */
	@Basic( optional = true )
	@Column( length = 250  )
	public String getTitle() {
		return this.title;
		
	}
	

  
	 /**  
	 * Set the value related to the column: title.
	 * @param title the title value you wish to set
	 */
	public void setTitle(final String title) {
		this.title = title;
	}


   /**
    * Deep copy.
	* @return cloned object
	* @throws CloneNotSupportedException on error
    */
    @Override
    public CqmCriterion clone() throws CloneNotSupportedException {
		
        final CqmCriterion copy = (CqmCriterion)super.clone();

		copy.setCmsId(this.getCmsId());
		if (this.getCqmResults() != null) {
			copy.getCqmResults().addAll(this.getCqmResults());
		}
		if (this.getCqmVersions() != null) {
			copy.getCqmVersions().addAll(this.getCqmVersions());
		}
		copy.setCqmCriterionType(this.getCqmCriterionType());
		copy.setCqmDomain(this.getCqmDomain());
		copy.setCqmEdition(this.getCqmEdition());
		copy.setCqmVersion(this.getCqmVersion());
		copy.setCreationDate(this.getCreationDate());
		copy.setDeleted(this.isDeleted());
		copy.setDescription(this.getDescription());
		copy.setId(this.getId());
		copy.setLastModifiedDate(this.getLastModifiedDate());
		copy.setLastModifiedUser(this.getLastModifiedUser());
		copy.setNqfNumber(this.getNqfNumber());
		copy.setNumber(this.getNumber());
		copy.setTitle(this.getTitle());
		return copy;
	}
	


	/** Provides toString implementation.
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		
		sb.append("cmsId: " + this.getCmsId() + ", ");
		sb.append("cqmDomain: " + this.getCqmDomain() + ", ");
		sb.append("cqmVersion: " + this.getCqmVersion() + ", ");
		sb.append("creationDate: " + this.getCreationDate() + ", ");
		sb.append("deleted: " + this.isDeleted() + ", ");
		sb.append("description: " + this.getDescription() + ", ");
		sb.append("id: " + this.getId() + ", ");
		sb.append("lastModifiedDate: " + this.getLastModifiedDate() + ", ");
		sb.append("lastModifiedUser: " + this.getLastModifiedUser() + ", ");
		sb.append("nqfNumber: " + this.getNqfNumber() + ", ");
		sb.append("number: " + this.getNumber() + ", ");
		sb.append("title: " + this.getTitle());
		return sb.toString();		
	}


	/** Equals implementation. 
	 * @see java.lang.Object#equals(java.lang.Object)
	 * @param aThat Object to compare with
	 * @return true/false
	 */
	@Override
	public boolean equals(final Object aThat) {
		Object proxyThat = aThat;
		
		if ( this == aThat ) {
			 return true;
		}

		
		if (aThat instanceof HibernateProxy) {
 			// narrow down the proxy to the class we are dealing with.
 			try {
				proxyThat = ((HibernateProxy) aThat).getHibernateLazyInitializer().getImplementation(); 
			} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		   	}
		}
		if (aThat == null)  {
			 return false;
		}
		
		final CqmCriterion that; 
		try {
			that = (CqmCriterion) proxyThat;
			if ( !(that.getClassType().equals(this.getClassType()))){
				return false;
			}
		} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		} catch (ClassCastException e) {
				return false;
		}
		
		
		boolean result = true;
		result = result && (((this.getId() == null) && ( that.getId() == null)) || (this.getId() != null  && this.getId().equals(that.getId())));
		result = result && (((getCmsId() == null) && (that.getCmsId() == null)) || (getCmsId() != null && getCmsId().equals(that.getCmsId())));
		result = result && (((getCqmCriterionType() == null) && (that.getCqmCriterionType() == null)) || (getCqmCriterionType() != null && getCqmCriterionType().getId().equals(that.getCqmCriterionType().getId())));	
		result = result && (((getCqmDomain() == null) && (that.getCqmDomain() == null)) || (getCqmDomain() != null && getCqmDomain().equals(that.getCqmDomain())));
		result = result && (((getCqmEdition() == null) && (that.getCqmEdition() == null)) || (getCqmEdition() != null && getCqmEdition().getId().equals(that.getCqmEdition().getId())));	
		result = result && (((getCqmVersion() == null) && (that.getCqmVersion() == null)) || (getCqmVersion() != null && getCqmVersion().equals(that.getCqmVersion())));
		result = result && (((getCreationDate() == null) && (that.getCreationDate() == null)) || (getCreationDate() != null && getCreationDate().equals(that.getCreationDate())));
		result = result && (((isDeleted() == null) && (that.isDeleted() == null)) || (isDeleted() != null && isDeleted().equals(that.isDeleted())));
		result = result && (((getDescription() == null) && (that.getDescription() == null)) || (getDescription() != null && getDescription().equals(that.getDescription())));
		result = result && (((getLastModifiedDate() == null) && (that.getLastModifiedDate() == null)) || (getLastModifiedDate() != null && getLastModifiedDate().equals(that.getLastModifiedDate())));
		result = result && (((getLastModifiedUser() == null) && (that.getLastModifiedUser() == null)) || (getLastModifiedUser() != null && getLastModifiedUser().equals(that.getLastModifiedUser())));
		result = result && (((getNqfNumber() == null) && (that.getNqfNumber() == null)) || (getNqfNumber() != null && getNqfNumber().equals(that.getNqfNumber())));
		result = result && (((getNumber() == null) && (that.getNumber() == null)) || (getNumber() != null && getNumber().equals(that.getNumber())));
		result = result && (((getTitle() == null) && (that.getTitle() == null)) || (getTitle() != null && getTitle().equals(that.getTitle())));
		return result;
	}
	
	/** Calculate the hashcode.
	 * @see java.lang.Object#hashCode()
	 * @return a calculated number
	 */
	@Override
	public int hashCode() {
		if ( this.hashCode == null ) {
			synchronized ( this ) {
				if ( this.hashCode == null ) {
					Long newHashCode = null;

					if ( getId() != null ) {
					newHashCode = SAVED_HASHES.get( getId() );
					}
					
					if ( newHashCode == null ) {
						if ( getId() != null && getId() != 0L) {
							newHashCode = getId();
						} else {
							newHashCode = (long) super.hashCode();

						}
					}
					
					this.hashCode = newHashCode;
				}
			}
		}
		return (int) (this.hashCode & 0xffffff);
	}
	

	
}
