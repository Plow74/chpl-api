package gov.healthit.chpl.entity;


import java.io.Serializable;
import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;


/** 
 * Object mapping for hibernate-handled table: atl_contact_map.
 * 
 *
 * @author autogenerated
 */

@Entity
@Table(name = "atl_contact_map", catalog = "openchpl", schema = "openchpl")
public class AtlContactMap implements Cloneable, Serializable {

	/** Serial Version UID. */
	private static final long serialVersionUID = -5130216377037769457L;

	

	/** Field mapping. */
	@Column( name = "authorize_representative"  )
	private Boolean authorizeRepresentative;

	/** Field mapping. */
	@Column( name = "creation_date", nullable = false  )
	private Date creationDate;

	/** Field mapping. */
	@Column( nullable = false  )
	private Boolean deleted;

	/** Field mapping. */
	@Id 
	private AtlContactMapPK id;

	/** Field mapping. */
	@Column( name = "last_modified_date", nullable = false  )
	private Date lastModifiedDate;

	/** Field mapping. */
	@Column( name = "last_modified_user", nullable = false  )
	private Long lastModifiedUser;

	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public AtlContactMap() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public AtlContactMap(AtlContactMapPK id) {
		this.id = id;
	}
	
	/** Constructor taking a given ID.
	 * @param creationDate Date object;
	 * @param deleted Boolean object;
	 * @param id AtlContactMapPK object;
	 * @param lastModifiedDate Date object;
	 * @param lastModifiedUser Long object;
	 */
	public AtlContactMap(Date creationDate, Boolean deleted, AtlContactMapPK id, 					
			Date lastModifiedDate, Long lastModifiedUser) {

		this.creationDate = creationDate;
		this.deleted = deleted;
		this.id = id;
		this.lastModifiedDate = lastModifiedDate;
		this.lastModifiedUser = lastModifiedUser;
	}
	
 


 
	/** Return the type of this class. Useful for when dealing with proxies.
	* @return Defining class.
	*/
	@Transient
	public Class<?> getClassType() {
		return AtlContactMap.class;
	}
 

	 /**
	 * Return the value associated with the column: authorizeRepresentative.
	 * @return A Boolean object (this.authorizeRepresentative)
	 */
	@Basic( optional = true )
	@Column( name = "authorize_representative"  )
	public Boolean isAuthorizeRepresentative() {
		return this.authorizeRepresentative;
		
	}
	

  
	 /**  
	 * Set the value related to the column: authorizeRepresentative.
	 * @param authorizeRepresentative the authorizeRepresentative value you wish to set
	 */
	public void setAuthorizeRepresentative(final Boolean authorizeRepresentative) {
		this.authorizeRepresentative = authorizeRepresentative;
	}

	 /**
	 * Return the value associated with the column: creationDate.
	 * @return A Date object (this.creationDate)
	 */
	@Basic( optional = false )
	@Column( name = "creation_date", nullable = false  )
	public Date getCreationDate() {
		return this.creationDate;
		
	}
	

  
	 /**  
	 * Set the value related to the column: creationDate.
	 * @param creationDate the creationDate value you wish to set
	 */
	public void setCreationDate(final Date creationDate) {
		this.creationDate = creationDate;
	}

	 /**
	 * Return the value associated with the column: deleted.
	 * @return A Boolean object (this.deleted)
	 */
	@Basic( optional = false )
	@Column( nullable = false  )
	public Boolean isDeleted() {
		return this.deleted;
		
	}
	

  
	 /**  
	 * Set the value related to the column: deleted.
	 * @param deleted the deleted value you wish to set
	 */
	public void setDeleted(final Boolean deleted) {
		this.deleted = deleted;
	}

	 /**
	 * Return the value associated with the column: id.
	 * @return A AtlContactMapPK object (this.id)
	 */
	public AtlContactMapPK getId() {
		return this.id;
		
	}
	

  
	 /**  
	 * Set the value related to the column: id.
	 * @param id the id value you wish to set
	 */
	public void setId(final AtlContactMapPK id) {
		this.id = id;
	}

	 /**
	 * Return the value associated with the column: lastModifiedDate.
	 * @return A Date object (this.lastModifiedDate)
	 */
	@Basic( optional = false )
	@Column( name = "last_modified_date", nullable = false  )
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
		
	}
	

  
	 /**  
	 * Set the value related to the column: lastModifiedDate.
	 * @param lastModifiedDate the lastModifiedDate value you wish to set
	 */
	public void setLastModifiedDate(final Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	 /**
	 * Return the value associated with the column: lastModifiedUser.
	 * @return A Long object (this.lastModifiedUser)
	 */
	@Basic( optional = false )
	@Column( name = "last_modified_user", nullable = false  )
	public Long getLastModifiedUser() {
		return this.lastModifiedUser;
		
	}
	

  
	 /**  
	 * Set the value related to the column: lastModifiedUser.
	 * @param lastModifiedUser the lastModifiedUser value you wish to set
	 */
	public void setLastModifiedUser(final Long lastModifiedUser) {
		this.lastModifiedUser = lastModifiedUser;
	}


   /**
    * Deep copy.
	* @return cloned object
	* @throws CloneNotSupportedException on error
    */
    @Override
    public AtlContactMap clone() throws CloneNotSupportedException {
		
        final AtlContactMap copy = (AtlContactMap)super.clone();

		copy.setAuthorizeRepresentative(this.isAuthorizeRepresentative());
		copy.setCreationDate(this.getCreationDate());
		copy.setDeleted(this.isDeleted());
		copy.setId(this.getId());
		copy.setLastModifiedDate(this.getLastModifiedDate());
		copy.setLastModifiedUser(this.getLastModifiedUser());
		return copy;
	}
	


	/** Provides toString implementation.
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		
		sb.append("authorizeRepresentative: " + this.isAuthorizeRepresentative() + ", ");
		sb.append("creationDate: " + this.getCreationDate() + ", ");
		sb.append("deleted: " + this.isDeleted() + ", ");
		sb.append("id: " + this.getId() + ", ");
		sb.append("lastModifiedDate: " + this.getLastModifiedDate() + ", ");
		sb.append("lastModifiedUser: " + this.getLastModifiedUser());
		return sb.toString();		
	}


	/** Equals implementation. 
	 * @see java.lang.Object#equals(java.lang.Object)
	 * @param aThat Object to compare with
	 * @return true/false
	 */
	@Override
	public boolean equals(final Object aThat) {
		if ( this == aThat ) {
			 return true;
		}

		if ((aThat == null) || ( !(aThat.getClass().equals(this.getClass())))) {
			 return false;
		}
	
		final AtlContactMap that = (AtlContactMap) aThat;
		return this.getId().equals(that.getId());
	}
	
	/** Calculate the hashcode.
	 * @see java.lang.Object#hashCode()
	 * @return a calculated number
	 */
	@Override
	public int hashCode() {
		return getId().hashCode();
	}
	

	
}
