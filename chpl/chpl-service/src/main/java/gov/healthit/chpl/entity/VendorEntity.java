package gov.healthit.chpl.entity;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Past;


/** 
 * Object mapping for hibernate-handled table: vendor.
 * Table to store vendors that are entered into the system
 *
 * @author autogenerated
 */

@Entity
@Table(name = "vendor")
public class VendorEntity implements Cloneable, Serializable {

	/** Serial Version UID. */
	private static final long serialVersionUID = -1396979009499564864L;
	
	@Id 
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "vendorVendor_idGenerator")
	@Basic( optional = false )
	@Column( name = "vendor_id", nullable = false  )
	@SequenceGenerator(name = "vendorVendor_idGenerator", sequenceName = "vendor_vendor_id_seq")
	private Long id;
	
	@Column(name = "name" )
	private String name;

	@Column( length = 300  )
	private String website;
	
	@Basic( optional = true )
	@OneToOne(optional = true, fetch = FetchType.LAZY)
	@JoinColumn(name = "address_id", unique=true, nullable = true)
	private AddressEntity address;
	
	@Basic( optional = false )
	@Column( name = "creation_date", nullable = false  )
	private Date creationDate;
	
	@Basic( optional = false )
	@NotNull
	@Column( nullable = false  )
	private Boolean deleted;
	
	
	@Basic( optional = false )
	@Column( name = "last_modified_date", nullable = false  )
	private Date lastModifiedDate;
	
	@Basic( optional = false )
	@NotNull
	@Column( name = "last_modified_user", nullable = false  )
	private Long lastModifiedUser;

 	@OneToMany( fetch = FetchType.LAZY, mappedBy = "id.vendorIdVendor"  )
	@Basic( optional = false )
	@Column( name = "vendor_id", nullable = false  )
	private Set<VendorContactMap> vendorContactMaps = new HashSet<VendorContactMap>();
 	
	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public VendorEntity() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public VendorEntity(Long id) {
		this.id = id;
	}
	
	/** Constructor taking a given ID.
	 * @param creationDate Date object;
	 * @param deleted Boolean object;
	 * @param id Long object;
	 * @param lastModifiedDate Date object;
	 * @param lastModifiedUser Long object;
	 */
	public VendorEntity(Date creationDate, Boolean deleted, Long id, 					
			Date lastModifiedDate, Long lastModifiedUser) {

		this.creationDate = creationDate;
		this.deleted = deleted;
		this.id = id;
		this.lastModifiedDate = lastModifiedDate;
		this.lastModifiedUser = lastModifiedUser;
	}
	
 


 
	/** Return the type of this class. Useful for when dealing with proxies.
	* @return Defining class.
	*/
	@Transient
	public Class<?> getClassType() {
		return VendorEntity.class;
	}

	 /**
	 * Return the value associated with the column: address.
	 * @return A Address object (this.address)
	 */
	public AddressEntity getAddress() {
		return this.address;
	}
  
	 /**  
	 * Set the value related to the column: address.
	 * @param address the address value you wish to set
	 */
	public void setAddress (AddressEntity address) {
		this.address = address;
	}

	 /**
	 * Return the value associated with the column: creationDate.
	 * @return A Date object (this.creationDate)
	 */
	public Date getCreationDate() {
		return this.creationDate;
		
	}
	

  
	 /**  
	 * Set the value related to the column: creationDate.
	 * @param creationDate the creationDate value you wish to set
	 */
	public void setCreationDate(final Date creationDate) {
		this.creationDate = creationDate;
	}

	 /**
	 * Return the value associated with the column: deleted.
	 * @return A Boolean object (this.deleted)
	 */
	public Boolean isDeleted() {
		return this.deleted;
		
	}
	

  
	 /**  
	 * Set the value related to the column: deleted.
	 * @param deleted the deleted value you wish to set
	 */
	public void setDeleted(final Boolean deleted) {
		this.deleted = deleted;
	}

	 /**
	 * Return the value associated with the column: id.
	 * @return A Long object (this.id)
	 */
 	public Long getId() {
		return this.id;
		
	}
	

  
	 /**  
	 * Set the value related to the column: id.
	 * @param id the id value you wish to set
	 */
	public void setId(final Long id) {
		this.id = id;
	}

	 /**
	 * Return the value associated with the column: lastModifiedDate.
	 * @return A Date object (this.lastModifiedDate)
	 */
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
		
	}
	

  
	 /**  
	 * Set the value related to the column: lastModifiedDate.
	 * @param lastModifiedDate the lastModifiedDate value you wish to set
	 */
	public void setLastModifiedDate(final Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	 /**
	 * Return the value associated with the column: lastModifiedUser.
	 * @return A Long object (this.lastModifiedUser)
	 */
	public Long getLastModifiedUser() {
		return this.lastModifiedUser;
		
	}
	

  
	 /**  
	 * Set the value related to the column: lastModifiedUser.
	 * @param lastModifiedUser the lastModifiedUser value you wish to set
	 */
	public void setLastModifiedUser(final Long lastModifiedUser) {
		this.lastModifiedUser = lastModifiedUser;
	}

	 /**
	 * Return the value associated with the column: name.
	 * @return A String object (this.name)
	 */
	public String getName() {
		return this.name;
		
	}
	

  
	 /**  
	 * Set the value related to the column: name.
	 * @param name the name value you wish to set
	 */
	public void setName(final String name) {
		this.name = name;
	}
	

	 /**
	 * Return the value associated with the column: vendorContactMap.
	 * @return A Set&lt;VendorContactMap&gt; object (this.vendorContactMap)
	 */
	public Set<VendorContactMap> getVendorContactMaps() {
		return this.vendorContactMaps;
		
	}
	
	/**
	 * Adds a bi-directional link of type VendorContactMap to the vendorContactMaps set.
	 * @param vendorContactMap item to add
	 */
	public void addVendorContactMap(VendorContactMap vendorContactMap) {
		vendorContactMap.getId().setVendorIdVendor(this);
		this.vendorContactMaps.add(vendorContactMap);
	}

  
	 /**  
	 * Set the value related to the column: vendorContactMap.
	 * @param vendorContactMap the vendorContactMap value you wish to set
	 */
	public void setVendorContactMaps(final Set<VendorContactMap> vendorContactMap) {
		this.vendorContactMaps = vendorContactMap;
	}

	 /**
	 * Return the value associated with the column: website.
	 * @return A String object (this.website)
	 */
	public String getWebsite() {
		return this.website;
		
	}
	

  
	 /**  
	 * Set the value related to the column: website.
	 * @param website the website value you wish to set
	 */
	public void setWebsite(final String website) {
		this.website = website;
	}


	/** Provides toString implementation.
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		
		sb.append("creationDate: " + this.getCreationDate() + ", ");
		sb.append("deleted: " + this.isDeleted() + ", ");
		sb.append("id: " + this.getId() + ", ");
		sb.append("lastModifiedDate: " + this.getLastModifiedDate() + ", ");
		sb.append("lastModifiedUser: " + this.getLastModifiedUser() + ", ");
		sb.append("name: " + this.getName() + ", ");
		sb.append("website: " + this.getWebsite());
		return sb.toString();		
	}
}
