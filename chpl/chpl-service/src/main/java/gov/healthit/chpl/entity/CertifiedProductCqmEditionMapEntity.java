package gov.healthit.chpl.entity;


import java.io.Serializable;
import java.util.Collections;
import java.util.Date;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.WeakHashMap;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import org.hibernate.proxy.HibernateProxy;


/** 
 * Object mapping for hibernate-handled table: certified_product_cqm_edition_map.
 * 
 *
 * @author autogenerated
 */

@Entity
@Table(name = "certified_product_cqm_edition_map", catalog = "openchpl", schema = "openchpl")
public class CertifiedProductCqmEditionMapEntity implements Serializable {

	/** Serial Version UID. */
	private static final long serialVersionUID = -7739329779543085451L;

	/** Use a WeakHashMap so entries will be garbage collected once all entities 
		referring to a saved hash are garbage collected themselves. */
	private static final Map<Serializable, Long> SAVED_HASHES =
		Collections.synchronizedMap(new WeakHashMap<Serializable, Long>());
	
	/** hashCode temporary storage. */
	private volatile Long hashCode;
	
	@Basic( optional = false )
	@Column(name = "certified_product_id", nullable = false )
	private Long certifiedProductId;
	
	
	private Long cqmResultId;
	
	/** Field mapping. */
	//private Set<CqmResultEntity> cqmResults = new HashSet<CqmResultEntity>();

    @Id 
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "certifiedProductCqmEditionMapCertified_product_cqm_edition_map_idGenerator")
	@Basic( optional = false )
	@Column( name = "certified_product_cqm_edition_map_id", nullable = false  )
	@SequenceGenerator(name = "certifiedProductCqmEditionMapCertified_product_cqm_edition_map_idGenerator", sequenceName = "openchpl.openchpl.certified_product_cqm_edition_certified_product_cqm_edition_seq", schema = "openchpl", catalog = "openchpl")
	private Long id;
	
	@Basic( optional = false )
	@Column(name = "cqm_edition_id", nullable = false )
	private Long cqmEditionId;
	
	@Basic( optional = false )
	@Column( name = "creation_date", nullable = false  )
	private Date creationDate;
	
	@Basic( optional = false )
	@Column( nullable = false  )
	private Boolean deleted;
	
	@Basic( optional = false )
	@Column( name = "last_modified_date", nullable = false  )
	private Date lastModifiedDate;
	
	@Basic( optional = false )
	@Column( name = "last_modified_user", nullable = false  )
	private Long lastModifiedUser;
	
	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public CertifiedProductCqmEditionMapEntity() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public CertifiedProductCqmEditionMapEntity(Long id) {
		this.id = id;
	}
	
	
}
